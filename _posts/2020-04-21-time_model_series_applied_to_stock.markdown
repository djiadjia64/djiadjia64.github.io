---
layout: post
title:      "Time Model Series Applied to Stock "
date:       2020-04-21 08:24:32 +0000
permalink:  time_model_series_applied_to_stock
---


This project has been a personal favorite of mine as it allowed me to combine my interests of both trading and data science. Specifically, my task was to create a time-series model to model a dataset of several commodities and stocks and see whether I can find any predictive qualities. 

My dataset specifically comes from Yahoo Finance's API, giving me daily data with the closing price, opening price, the high, and the low specifically. Although I had originally planned to explore more factors such as volume and options specifically, I ended up only looking at the closing price for this particular project. The main time series model I used was a moving average variant. 

I had some difficulties working with assembling the dataset in the first place, mainly because I had to manually assemble the dataset from the individual datasets I had imported from Yahoo Finance.  Also, my original plan was a lot more complicated. I had wanted to download extra data from the CBOE exchange and look for any correlations or patterns. However, it would be too much work and would have gone beyond the task of time-series for this project. The dataset itself was not bad. I had originally planned to model a lot more than one trading vehicle but ultimately decided against it. If I had gone through with the original plan, I would have had to deal with a lot of missing data. The dataset of the one stock I was modeling (SPY) was very complete and did not need much EDA. And fitting the ARMA model was pretty straightfoward as well. 

The model I used for this project is called ARIMA (Auto Regressive Moving Average), which uses a type of moving average of the previous data to help predict future data points. Specifically, the model assumes the past is representative and the future and derives an equation for future values from immediate past values. There were three parameters I had to tune to optimize my results, called the d, q, and p of the model. There are algorithms that will sort and return optimal parameters but it was easy enough for me to personally run all the possible ARMA models and pick the one that gave me the best results. Using the lag of the time series, the ARMA model did a decent job at predicting future prices in time periods only showing little fundamental influence.  

I've always been very interested in the stock market and using my learned-data science skills felt very fulfilling. Though I ran a relatively simple time-series model, this project gave me an idea of how to apply machine learning concepts to the real-world of stock trading. In the future, I plan to incorporate more refined and specific data. As Yahoo Finance is a free API, it does not give too  much information generally. To get better and more relevant data comes with a pretty hefty price, so you must know what you are doing with the specific data you bought. Due to this and the relevancy of the project itself, I felt like it was unwise to go into the grittier details and stick to the fundamentals of time-series modeling. Consequentially, I must be aware of the drawbacks that the algorithm inherently creates. In my opinion, the most important factor that is not represented too well in the data is context. Big moves happen all the time in reaction to changes in market information which can be translated into a trend but is instead a reaction to the changing of pure fundamentals. Being able to distinguish this and train models without this bias and numerous others is critical in producing a successful model. For my next project, I plan to download my dataset from CBOE, a popular data exchange, and specifically download data in relation to trade volume and specific large buys and sells in both stock and options trading. This will give me a closer look at the micro-level in what is happening in these trend-changes or when action suddenly occurs from a period of stability. Being able to combine options and stock data will prove to be beneficial in making a better model. Options are basically leveraged vehicles that traders can use to trade stocks and commodities. This allows a deposit of a thousand dollars to control up to 100x worth of stocks or commodities, and unusually large purchases may signify when big-game traders see a turn-around. Along with this data, I will attempt to discern any particular patterns of buys or sells right before significant moves in the stock trading section and see whether these two are correlated in any way. Though it may cost some money, it pays for itself and more in knowledge and experienced-gained, I think. After, I wanted to plot the correlations and traces of different stocks and commodities and see whether I could discern any predictive qualities within how the different vehicles interacted with each other. 
